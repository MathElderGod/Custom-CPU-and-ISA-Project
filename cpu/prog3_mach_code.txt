000000000 	// xor r0 r0
010111001 	// addi r7 1
100111101 	// ls r7 -3
100111110 	// ls r7 -2
000110111 	// xor r6 r7
010110111 	// addi r6 -1
000100110 	// xor r4 r6
101101111 	// ld r5 r7
100101011 	// ls r5 3
010111001 	// addi r7 1
101000110 	// ld r0 r6
100000101 	// ls r0 -3
100000011 	// ls r0 3
000000101 	// xor r0 r5
001000010 	// beq r0 0 2
111111100 	// j 60
010011001 	// addi r3 1
101000110 	// ld r0 r6
100000110 	// ls r0 -2
100000011 	// ls r0 3
000000101 	// xor r0 r5
001000010 	// beq r0 0 2
111111100 	// j 60
010011001 	// addi r3 1
101000110 	// ld r0 r6
100000111 	// ls r0 -1
100000011 	// ls r0 3
000000101 	// xor r0 r5
001000010 	// beq r0 0 2
111111100 	// j 60
010011001 	// addi r3 1
101000110 	// ld r0 r6
100000011 	// ls r0 3
000000101 	// xor r0 r5
001000010 	// beq r0 0 2
111111100 	// j 60
010011001 	// addi r3 1
000000000 	// xor r0 r0
000000110 	// xor r0 r6
001000011 	// beq r0 0 3
010110111 	// addi r6 -1
111001010 	// j 10
110011111 	// st r3 r7
010111001 	// addi r7 1
000011011 	// xor r3 r3
000110100 	// xor r6 r4
101000110 	// ld r0 r6
100000101 	// ls r0 -3
100000011 	// ls r0 3
000000101 	// xor r0 r5
001000010 	// beq r0 0 2
111111011 	// j 59
010011001 	// addi r3 1
000000000 	// xor r0 r0
000000110 	// xor r0 r6
001000011 	// beq r0 0 3
010110111 	// addi r6 -1
111101110 	// j 46
111111010 	// j 58
101000110 	// ld r0 r6
100000110 	// ls r0 -2
100000011 	// ls r0 3
000000101 	// xor r0 r5
001000010 	// beq r0 0 2
111111011 	// j 59
010011001 	// addi r3 1
000000000 	// xor r0 r0
000000110 	// xor r0 r6
001000011 	// beq r0 0 3
010110111 	// addi r6 -1
111101110 	// j 46
111111010 	// j 58
101000110 	// ld r0 r6
100000111 	// ls r0 -1
100000011 	// ls r0 3
000000101 	// xor r0 r5
001000010 	// beq r0 0 2
111111011 	// j 59
010011001 	// addi r3 1
000000000 	// xor r0 r0
000000110 	// xor r0 r6
001000011 	// beq r0 0 3
010110111 	// addi r6 -1
111101110 	// j 46
111111010 	// j 58
101000110 	// ld r0 r6
100000011 	// ls r0 3
000000101 	// xor r0 r5
001000010 	// beq r0 0 2
111111011 	// j 59
010011001 	// addi r3 1
000000000 	// xor r0 r0
000000110 	// xor r0 r6
001000011 	// beq r0 0 3
010110111 	// addi r6 -1
111101110 	// j 46
110011111 	// st r3 r7
010111001 	// addi r7 1
000011011 	// xor r3 r3
000110100 	// xor r6 r4
000100100 	// xor r4 r4
101000110 	// ld r0 r6
100000101 	// ls r0 -3
100000011 	// ls r0 3
000000101 	// xor r0 r5
001000010 	// beq r0 0 2
111111100 	// j 60
010011001 	// addi r3 1
101000110 	// ld r0 r6
100000110 	// ls r0 -2
100000011 	// ls r0 3
000000101 	// xor r0 r5
001000010 	// beq r0 0 2
111111100 	// j 60
010011001 	// addi r3 1
101000110 	// ld r0 r6
100000111 	// ls r0 -1
100000011 	// ls r0 3
000000101 	// xor r0 r5
001000010 	// beq r0 0 2
111111100 	// j 60
010011001 	// addi r3 1
101000110 	// ld r0 r6
100000011 	// ls r0 3
000000101 	// xor r0 r5
001000010 	// beq r0 0 2
111111100 	// j 60
010011001 	// addi r3 1
000000000 	// xor r0 r0
000000110 	// xor r0 r6
001000010 	// beq r0 0 2
111111001 	// j 57
110011111 	// st r3 r7
000010010 	// xor r2 r2
101000110 	// ld r0 r6
010110111 	// addi r6 -1
101001110 	// ld r1 r6
010110001 	// addi r6 1
100000011 	// ls r0 3
100000001 	// ls r0 1
011001001 	// andi r1 1
100001101 	// ls r1 -3
100001111 	// ls r1 -1
000000001 	// xor r0 r1
000000101 	// xor r0 r5
001000010 	// beq r0 0 2
111111100 	// j 60
010011001 	// addi r3 1
101000110 	// ld r0 r6
010110111 	// addi r6 -1
101001110 	// ld r1 r6
010110001 	// addi r6 1
100000011 	// ls r0 3
100000010 	// ls r0 2
100001101 	// ls r1 -3
100001101 	// ls r1 -3
100001011 	// ls r1 3
000000001 	// xor r0 r1
000000101 	// xor r0 r5
001000010 	// beq r0 0 2
111111100 	// j 60
010011001 	// addi r3 1
101000110 	// ld r0 r6
010110111 	// addi r6 -1
101001110 	// ld r1 r6
010110001 	// addi r6 1
100000011 	// ls r0 3
100000011 	// ls r0 3
100001101 	// ls r1 -3
100001110 	// ls r1 -2
100001011 	// ls r1 3
000000001 	// xor r0 r1
000000101 	// xor r0 r5
001000010 	// beq r0 0 2
111111100 	// j 60
010011001 	// addi r3 1
101000110 	// ld r0 r6
010110111 	// addi r6 -1
101001110 	// ld r1 r6
010110001 	// addi r6 1
100000011 	// ls r0 3
100000011 	// ls r0 3
100000001 	// ls r0 1
100001101 	// ls r1 -3
100001111 	// ls r1 -1
100001011 	// ls r1 3
000000001 	// xor r0 r1
000000101 	// xor r0 r5
001000010 	// beq r0 0 2
111111100 	// j 60
010011001 	// addi r3 1
010110111 	// addi r6 -1
111111000 	// j 56
